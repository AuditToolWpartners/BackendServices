
from django.db import models
from django.db import models
from django.contrib.auth.models import User


class infomodel(models.Model):
    totalScoreAvailable = models.IntegerField(blank=True)
    orgName = models.TextField(blank=True)
    regAddress = models.TextField(blank=True)
    companyType = models.TextField(blank=True)
    yearOI = models.TextField(blank=True)
    cybInsurance = models.TextField(blank=True)
    insuranceDetails = models.TextField(blank=True)
    itModels = models.TextField(blank=True)
    comSize = models.TextField(blank=True)
    employees = models.IntegerField(blank=True)
    contractors = models.IntegerField(blank=True)
    region = models.TextField(blank=True)
    indVert = models.TextField(blank=True)
    reqPCI = models.TextField(blank=True)
    regICO = models.TextField(blank=True)
    cybEssCert = models.TextField(blank=True)
    gdprAccred = models.TextField(blank=True)
    ISOAccred = models.TextField(blank=True)
    otherAccred = models.TextField(blank=True)
    otherAccredDetails = models.TextField(blank=True)
    subjectRecords = models.IntegerField(blank=True)
    otherSocials = models.TextField(blank=True)
    otherSocialsDetails = models.TextField(blank=True)
    slack = models.TextField(blank=True)
    jira = models.TextField(blank=True)
    trello = models.TextField(blank=True)
    otherTools = models.TextField(blank=True)
    otherToolsDetails = models.TextField(blank=True)
    otherPolicy = models.TextField(blank=True)
    # Don't know field types yet fully


class digitalFootprintmodel(models.Model):
    totalScoreAvailable = models.IntegerField(blank=True)
    cybAttackScore = models.IntegerField(blank=True)
    sufCyberAttack = models.TextField(blank=True)
    websiteScore = models.IntegerField(blank=True)
    website = models.TextField(blank=True)
    linkedInScore = models.IntegerField(blank=True)
    linkedIn = models.TextField(blank=True)
    twitterScore = models.IntegerField(blank=True)
    twitter = models.TextField(blank=True)
    facebookScore = models.IntegerField(blank=True)
    facebook = models.TextField(blank=True)
    instagramScore = models.IntegerField(blank=True)
    intagram = models.TextField(blank=True)


class industryriskmodel(models.Model):
    totalScoreAvailable = models.IntegerField(blank=True)
    prtCNIScore = models.IntegerField(blank=True)
    prtCNI = models.TextField(blank=True)
    srvGovScore = models.IntegerField(blank=True)
    srvGov = models.TextField(blank=True)
    srvDefScore = models.IntegerField(blank=True)
    srvDef = models.TextField(blank=True)
    srvCNIScore = models.IntegerField(blank=True)
    srvCNI = models.TextField(blank=True)
    srvHealthScore = models.IntegerField(blank=True)
    srvHealth = models.TextField(blank=True)
    reqPCIScore = models.IntegerField(blank=True)
    reqPCI = models.TextField(blank=True)
    devSoftwareScore = models.IntegerField(blank=True)
    devSoftware = models.TextField(blank=True)
    managedServicesScore = models.IntegerField(blank=True)
    managedServices = models.TextField(blank=True)
    hostingServicesScore = models.IntegerField(blank=True)
    hostingServices = models.TextField(blank=True)
    healthRecordsScore = models.IntegerField(blank=True)
    healthRecords = models.TextField(blank=True)
    processPaymentsScore = models.IntegerField(blank=True)
    processPayments = models.TextField(blank=True)


class governancemodel(models.Model):
    totalScoreAvailable = models.IntegerField(blank=True)
    individualResponsibleScore = models.IntegerField(blank=True)
    individualResponsible = models.TextField(blank=True)
    responsibleDocScore = models.IntegerField(blank=True)
    responsibleDoc = models.TextField(blank=True)
    budgetSecurityScore = models.IntegerField(blank=True)
    budgetSecurity = models.TextField(blank=True)
    dataProtectionOfficerScore = models.IntegerField(blank=True)
    dataProtectionOfficer = models.TextField(blank=True)
    riskManagementScore = models.IntegerField(blank=True)
    riskManagement = models.TextField(blank=True)
    networkSecurityScore = models.IntegerField(blank=True)
    networkSecurity = models.TextField(blank=True)
    accessControlScore = models.IntegerField(blank=True)
    accessControl = models.TextField(blank=True)
    vulnerabilityManagementScore = models.IntegerField(blank=True)
    vulnerabilityManagement = models.TextField(blank=True)
    testingScore = models.IntegerField(blank=True)
    testing = models.TextField(blank=True)
    threatIntelligenceScore = models.IntegerField(blank=True)
    threatIntelligence = models.TextField(blank=True)
    incidentResponseScore = models.IntegerField(blank=True)
    incidentResponse = models.TextField(blank=True)
    backupRecoveryScore = models.IntegerField(blank=True)
    backupRecovery = models.TextField(blank=True)
    trainingAwarenessScore = models.IntegerField(blank=True)
    trainingAwareness = models.TextField(blank=True)
    systemsDataScore = models.IntegerField(blank=True)
    systemsData = models.TextField(blank=True)
    obsoleteUserScore = models.IntegerField(blank=True)
    obsoleteUser = models.TextField(blank=True)
    infoClassificationScore = models.IntegerField(blank=True)
    infoClassification = models.TextField(blank=True)
    dataFlowsScore = models.IntegerField(blank=True)
    dataFlows = models.TextField(blank=True)
    passwordAuditsScore = models.IntegerField(blank=True)
    passwordAudits = models.TextField(blank=True)
    dataBreachesICOScore = models.IntegerField(blank=True)
    dataBreachesICO = models.TextField(blank=True)


class riskManagementmodel(models.Model):
    totalScoreAvailable = models.IntegerField(blank=True)
    riskRegisterScore = models.IntegerField(blank=True)
    riskRegister = models.TextField(blank=True)
    reviewedLeadershipScore = models.IntegerField(blank=True)
    reviewedLeadership = models.TextField(blank=True)
    riskReviewMeetingScore = models.IntegerField(blank=True)
    riskReviewMeeting = models.TextField(blank=True)
    riskManagementGuideScore = models.IntegerField(blank=True)
    riskManagementGuide = models.TextField(blank=True)
    documentedStrategyScore=models.IntegerField(blank=True)
    documentedStrategy=models.TextField(blank=True)
    strategyReviewedScore = models.IntegerField(blank=True)
    strategyReviewed = models.TextField(blank=True)
    roadmapLeadershipScore = models.IntegerField(blank=True)
    roadmapLeadership = models.TextField(blank=True)
    assetRegisterScore = models.IntegerField(blank=True)
    assetRegister = models.TextField(blank=True)
    crownJewlsScore = models.IntegerField(blank=True)
    crownJewls = models.TextField(blank=True)


class policymodel(models.Model):
    totalScoreAvailable = models.IntegerField(blank=True)
    passwordPolicyScore = models.IntegerField(blank=True)
    passwordPolicy = models.TextField(blank=True)
    securityPolicyScore = models.IntegerField(blank=True)
    securityPolicy = models.TextField(blank=True)
    acceptableUsePolicyScore = models.IntegerField(blank=True)
    acceptableUsePolicy = models.TextField(blank=True)
    accessManagementPolicyScore = models.IntegerField(blank=True)
    accessManagementPolicy = models.TextField(blank=True)
    secureDevicePolicyScore = models.IntegerField(blank=True)
    secureDevicePolicy = models.TextField(blank=True)
    remoteWorkingPolicyScore = models.IntegerField(blank=True)
    remoteWorkingPolicy = models.TextField(blank=True)
    socialMediaPolicyScore = models.IntegerField(blank=True)
    socialMediaPolicy = models.TextField(blank=True)
    byodPolicyScore = models.IntegerField(blank=True)
    byodPolicy = models.TextField(blank=True)
    policiesUpdatedScore = models.IntegerField(blank=True)
    policiesUpdated = models.TextField(blank=True)
    policiesToldToStaffScore = models.IntegerField(blank=True)
    policiesToldToStaff = models.TextField(blank=True)
    complexityReqPassScore = models.IntegerField(blank=True)
    complexityReqPass = models.TextField(blank=True)
    onBoardingStaffScore = models.IntegerField(blank=True)
    onBoardingStaff = models.TextField(blank=True)
    offBoardingStaffScore = models.IntegerField(blank=True)
    offBoardingStaff = models.TextField(blank=True)
    handlingPoliciesScore = models.IntegerField(blank=True)
    handlingPolicies = models.TextField(blank=True)
    complexReqAdminPassScore = models.IntegerField(blank=True)
    complexReqAdminPass = models.TextField(blank=True)



class trainingmodel(models.Model):
    totalScoreAvailable = models.IntegerField(blank=True)
    staffTrainingScore = models.IntegerField(blank=True)
    staffTraining = models.TextField(blank=True)
    staffTrainingUpdatesScore = models.IntegerField(blank=True)
    staffTrainingUpdates = models.TextField(blank=True)
    phishingTrainingScore = models.IntegerField(blank=True)
    phishingTraining = models.TextField(blank=True)
    passwordTrainingScore = models.IntegerField(blank=True)
    passwordTraining = models.TextField(blank=True)
    secureWorkingTrainingScore = models.IntegerField(blank=True)
    secureWorkingTraining = models.TextField(blank=True)
    protectionTrainingScore = models.IntegerField(blank=True)
    protectionTraining = models.TextField(blank=True)
    securityIncidentTrainingScore = models.IntegerField(blank=True)
    securityIncidentTraining = models.TextField(blank=True)
    emailTrainingScore = models.IntegerField(blank=True)
    emailTraining = models.TextField(blank=True)
    socialMediaTrainingScore = models.IntegerField(blank=True)
    socialMediaTraining = models.TextField(blank=True)


class IAMmodel(models.Model):
    totalScoreAvailable = models.IntegerField(blank=True)
    dataRestrictionScore = models.IntegerField(blank=True)
    dataRestriction = models.TextField(blank=True)
    confidentialInfoScore = models.IntegerField(blank=True)
    confidentialInfo = models.TextField(blank=True)
    administratorAccessScore = models.IntegerField(blank=True)
    administratorAccess = models.TextField(blank=True)
    limitAdminAccessScore = models.IntegerField(blank=True)
    limitAdminAccess = models.TextField(blank=True)
    adminRestrictionScore = models.IntegerField(blank=True)
    adminRestriction = models.TextField(blank=True)
    generateAlertsScore = models.IntegerField(blank=True)
    generateAlerts = models.TextField(blank=True)
    passwordManagementScore = models.IntegerField(blank=True)
    passwordManagement = models.TextField(blank=True)
    authenticationScore = models.IntegerField(blank=True)
    authentication = models.TextField(blank=True)
    twoFacAuthScore = models.IntegerField(blank=True)
    twoFacAuth = models.TextField(blank=True)
    lockoutScore = models.IntegerField(blank=True)
    lockout = models.TextField(blank=True)
    noDefaultPassScore = models.IntegerField(blank=True)
    noDefaultPass = models.TextField(blank=True)
    rolebaseAccessControlScore = models.IntegerField(blank=True)
    rolebaseAccessControl = models.TextField(blank=True)


class DataProtectionmodel(models.Model):
    totalScoreAvailable = models.IntegerField(blank=True)
    encryptStorageScore = models.IntegerField(blank=True)
    encryptStorage = models.TextField(blank=True)
    transitDataProtectionScore = models.IntegerField(blank=True)
    transitDataProtection = models.TextField(blank=True)
    restDataProtectionScore = models.IntegerField(blank=True)
    restDataProtection = models.TextField(blank=True)
    dataLossPreventionScore = models.IntegerField(blank=True)
    dataLossPrevention = models.TextField(blank=True)
    wipeRetiredDevicesScore = models.IntegerField(blank=True)
    wipeRetiredDevies = models.TextField(blank=True)
    domainBreachesScore = models.IntegerField(blank=True)
    domainBreaches = models.TextField(blank=True)
    breachedCredentialsScore = models.IntegerField(blank=True)
    breachedCredentials = models.TextField(blank=True)
    dataProtectionFinalScore = models.IntegerField(blank=True)
    dataProtectionFinal = models.TextField(blank=True)


class Backupmodel(models.Model):
    totalScoreAvailable = models.IntegerField(blank=True)
    criticalDataBakupScore = models.IntegerField(blank=True)
    criticalDataBakup = models.TextField(blank=True)
    offSiteBackupScore = models.IntegerField(blank=True)
    offSiteBackup = models.TextField(blank=True)
    encryptedBackupScore = models.IntegerField(blank=True)
    encryptedBackup = models.TextField(blank=True)
    offDomainBackupScore = models.IntegerField(blank=True)
    offDomainBackup = models.TextField(blank=True)


class cyberaudit(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    infofield = models.ForeignKey(infomodel, on_delete=models.CASCADE, blank=True)
    digitalFootprintfield = models.ForeignKey(digitalFootprintmodel, on_delete=models.CASCADE, blank=True)
    industryriskfield = models.ForeignKey(industryriskmodel, on_delete=models.CASCADE, blank=True)
    governancefield = models.ForeignKey(governancemodel, on_delete=models.CASCADE, blank=True)
    riskManagementfield = models.ForeignKey(riskManagementmodel, on_delete=models.CASCADE, blank=True)
    policyfield = models.ForeignKey(policymodel, on_delete=models.CASCADE, blank=True)
    trainingfield = models.ForeignKey(trainingmodel, on_delete=models.CASCADE, blank=True)
    IAMfield = models.ForeignKey(IAMmodel, on_delete=models.CASCADE, blank=True)
    DataProtectionfield = models.ForeignKey(DataProtectionmodel, on_delete=models.CASCADE, blank=True)
    Backupfield = models.ForeignKey(Backupmodel, on_delete=models.CASCADE, blank=True)


